<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Task-1_17511292805040' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.0zi9c4b1az6pjh1b7pp7t054mmlz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.0ivjnx61c1ql0r101awq50phsxqj'>
            <connection class='semistructpassivestore-direct' directory='E:/Courses/Delloite Forge/Data Analytics' filename='daikibo-telemetry-data.json' password='' server='' workgroup-auth-mode='as-is'>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0ivjnx61c1ql0r101awq50phsxqj' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_1263259721255612418]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/NEELAN~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0ck8jt103jn1ud147ymt40l479js.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/28/2025 03:18:54 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6519</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0ivjnx61c1ql0r101awq50phsxqj' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_DFD28C3FED304C0C9CFC406B0F8F75EB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Downtime per Factory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.0zi9c4b1az6pjh1b7pp7t054mmlz' />
          </datasources>
          <datasource-dependencies datasource='federated.0zi9c4b1az6pjh1b7pp7t054mmlz'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1263259721255612418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1263259721255612418]' derivation='Sum' name='[sum:Calculation_1263259721255612418:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[sum:Calculation_1263259721255612418:qk]' field-type='quantitative' max='549' min='-52' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[none:factory:nk]' value='300' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[sum:Calculation_1263259721255612418:qk]</rows>
        <cols>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{68C6C0EA-EF0A-44FA-B8EE-148F2B88F522}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Downtime per Machine</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.0zi9c4b1az6pjh1b7pp7t054mmlz' />
          </datasources>
          <datasource-dependencies datasource='federated.0zi9c4b1az6pjh1b7pp7t054mmlz'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1263259721255612418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column-instance column='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97:qk]' pivot='key' type='quantitative' />
            <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]' role='measure' type='quantitative' />
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1263259721255612418]' derivation='Sum' name='[sum:Calculation_1263259721255612418:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[Action (Factory)]'>
            <groupfilter function='member' level='[factory]' member='&quot;daikibo-shenzhen&quot;' user:ui-action-filter='[Action1_DFD28C3FED304C0C9CFC406B0F8F75EB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[__tableau_internal_object_id__].[cnt:daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97:qk]' included-values='all' />
          <slices>
            <column>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[__tableau_internal_object_id__].[cnt:daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97:qk]</column>
            <column>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[none:deviceType:nk]' value='108' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[sum:Calculation_1263259721255612418:qk]</rows>
        <cols>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{EB7BA68E-5EB2-4C42-B1AF-95F22FF017FD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='1500' minheight='660' minwidth='1500' sizing-mode='range' />
      <datasources>
        <datasource caption='daikibo-telemetry-data' name='federated.0zi9c4b1az6pjh1b7pp7t054mmlz' />
      </datasources>
      <datasource-dependencies datasource='federated.0zi9c4b1az6pjh1b7pp7t054mmlz'>
        <column-instance column='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97:qk]' pivot='key' type='quantitative' />
        <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97858' id='12' param='horz' type-v2='layout-flow' w='98934' x='533' y='1071'>
            <zone fixed-size='1417' h='97858' id='10' is-fixed='true' type-v2='layout-basic' w='94467' x='533' y='1071'>
              <zone h='48929' id='7' name='Sheet 1' w='94467' x='533' y='1071'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48929' id='9' name='Sheet 2' w='94467' x='533' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='97858' id='11' param='vert' type-v2='layout-flow' w='4467' x='95000' y='1071'>
              <zone h='10308' id='13' name='Sheet 2' param='[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[__tableau_internal_object_id__].[cnt:daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='4467' x='95000' y='1071'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97858' id='16' param='vert' type-v2='layout-flow' w='98934' x='533' y='1071'>
                <zone fixed-size='280' h='48929' id='7' is-fixed='true' name='Sheet 1' w='94467' x='533' y='1071'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10308' id='13' name='Sheet 2' param='[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[__tableau_internal_object_id__].[cnt:daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='4467' x='95000' y='1071'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48929' id='9' is-fixed='true' name='Sheet 2' w='94467' x='533' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{58FD709B-EE22-45D7-8A69-8B410618E193}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29F2299B-69A9-486D-93B8-ADAAA0E3EFB2}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[__tableau_internal_object_id__].[cnt:daikibo-telemetry-data.json_0FCD5159CB5C4B06B5A538A02071DF97:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E12AE234-1192-472D-AA56-D29CECFE6CFC}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[none:factory:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[sum:Calculation_1263259721255612418:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[none:factory:nk]</field>
                    <field>[federated.0zi9c4b1az6pjh1b7pp7t054mmlz].[sum:Calculation_1263259721255612418:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;daikibo-shenzhen&quot;</value>
                  <value>420</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{A9DD666F-7385-42E7-8C85-CC088F96A95C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
